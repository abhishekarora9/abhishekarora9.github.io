{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Desktop/abhishekarora9.github.io/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:8000\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [jobId, setJobId] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [downloadUrl, setDownloadUrl] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setStatus(\"\");\n    setDownloadUrl(\"\");\n    setError(\"\");\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    setStatus(\"Uploading...\");\n    setError(\"\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const res = await fetch(`${API_URL}/upload`, {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (data.job_id) {\n        setJobId(data.job_id);\n        setStatus(\"Processing...\");\n        pollStatus(data.job_id);\n      } else {\n        setError(\"Failed to start processing.\");\n      }\n    } catch (err) {\n      setError(\"Upload failed.\");\n    }\n  };\n  const pollStatus = async jobId => {\n    let interval = setInterval(async () => {\n      try {\n        const res = await fetch(`${API_URL}/status/${jobId}`);\n        const data = await res.json();\n        setStatus(data.status);\n        if (data.status === \"completed\") {\n          setDownloadUrl(`${API_URL}/download/${jobId}`);\n          clearInterval(interval);\n        } else if (data.status === \"failed\") {\n          setError(\"Processing failed.\");\n          clearInterval(interval);\n        }\n      } catch (err) {\n        setError(\"Error checking status.\");\n        clearInterval(interval);\n      }\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 500,\n      margin: \"40px auto\",\n      padding: 24,\n      borderRadius: 8,\n      boxShadow: \"0 2px 8px #eee\",\n      background: \"#fff\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"BPMN Generator from SOP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf,.docx,.png,.jpg,.jpeg\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: 16\n      },\n      onClick: handleUpload,\n      disabled: !file,\n      children: \"Upload & Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 16\n      },\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 18\n    }, this), downloadUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: downloadUrl,\n      style: {\n        display: \"block\",\n        marginTop: 16\n      },\n      download: true,\n      children: \"Download BPMN XML\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        marginTop: 16\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 32,\n        fontSize: 12,\n        color: \"#888\"\n      },\n      children: \"Supported: PDF, DOCX, Images. Powered by AI multi-agent pipeline.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bXvni6d/cAiiYnhVifMigE6HN8A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","App","_s","file","setFile","jobId","setJobId","status","setStatus","downloadUrl","setDownloadUrl","error","setError","handleFileChange","e","target","files","handleUpload","formData","FormData","append","res","fetch","method","body","data","json","job_id","pollStatus","err","interval","setInterval","clearInterval","style","maxWidth","margin","padding","borderRadius","boxShadow","background","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","marginTop","onClick","disabled","href","display","download","color","fontSize","_c","$RefreshReg$"],"sources":["/Users/abhishek/Desktop/abhishekarora9.github.io/frontend/src/App.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\n\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:8000\";\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [jobId, setJobId] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [downloadUrl, setDownloadUrl] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setStatus(\"\");\n    setDownloadUrl(\"\");\n    setError(\"\");\n  };\n\n  const handleUpload = async () => {\n    if (!file) return;\n    setStatus(\"Uploading...\");\n    setError(\"\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const res = await fetch(`${API_URL}/upload`, {\n        method: \"POST\",\n        body: formData,\n      });\n      const data = await res.json();\n      if (data.job_id) {\n        setJobId(data.job_id);\n        setStatus(\"Processing...\");\n        pollStatus(data.job_id);\n      } else {\n        setError(\"Failed to start processing.\");\n      }\n    } catch (err) {\n      setError(\"Upload failed.\");\n    }\n  };\n\n  const pollStatus = async (jobId) => {\n    let interval = setInterval(async () => {\n      try {\n        const res = await fetch(`${API_URL}/status/${jobId}`);\n        const data = await res.json();\n        setStatus(data.status);\n        if (data.status === \"completed\") {\n          setDownloadUrl(`${API_URL}/download/${jobId}`);\n          clearInterval(interval);\n        } else if (data.status === \"failed\") {\n          setError(\"Processing failed.\");\n          clearInterval(interval);\n        }\n      } catch (err) {\n        setError(\"Error checking status.\");\n        clearInterval(interval);\n      }\n    }, 2000);\n  };\n\n  return (\n    <div style={{ maxWidth: 500, margin: \"40px auto\", padding: 24, borderRadius: 8, boxShadow: \"0 2px 8px #eee\", background: \"#fff\" }}>\n      <h2>BPMN Generator from SOP</h2>\n      <input type=\"file\" accept=\".pdf,.docx,.png,.jpg,.jpeg\" onChange={handleFileChange} />\n      <button style={{ marginTop: 16 }} onClick={handleUpload} disabled={!file}>Upload & Process</button>\n      {status && <div style={{ marginTop: 16 }}>Status: {status}</div>}\n      {downloadUrl && (\n        <a href={downloadUrl} style={{ display: \"block\", marginTop: 16 }} download>\n          Download BPMN XML\n        </a>\n      )}\n      {error && <div style={{ color: \"red\", marginTop: 16 }}>{error}</div>}\n      <div style={{ marginTop: 32, fontSize: 12, color: \"#888\" }}>\n        Supported: PDF, DOCX, Images. Powered by AI multi-agent pipeline.\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAExE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMmB,gBAAgB,GAAIC,CAAC,IAAK;IAC9BV,OAAO,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1BR,SAAS,CAAC,EAAE,CAAC;IACbE,cAAc,CAAC,EAAE,CAAC;IAClBE,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMK,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACd,IAAI,EAAE;IACXK,SAAS,CAAC,cAAc,CAAC;IACzBI,QAAQ,CAAC,EAAE,CAAC;IACZ,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEjB,IAAI,CAAC;IAC7B,IAAI;MACF,MAAMkB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGzB,OAAO,SAAS,EAAE;QAC3C0B,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC7B,IAAID,IAAI,CAACE,MAAM,EAAE;QACfrB,QAAQ,CAACmB,IAAI,CAACE,MAAM,CAAC;QACrBnB,SAAS,CAAC,eAAe,CAAC;QAC1BoB,UAAU,CAACH,IAAI,CAACE,MAAM,CAAC;MACzB,CAAC,MAAM;QACLf,QAAQ,CAAC,6BAA6B,CAAC;MACzC;IACF,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZjB,QAAQ,CAAC,gBAAgB,CAAC;IAC5B;EACF,CAAC;EAED,MAAMgB,UAAU,GAAG,MAAOvB,KAAK,IAAK;IAClC,IAAIyB,QAAQ,GAAGC,WAAW,CAAC,YAAY;MACrC,IAAI;QACF,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGzB,OAAO,WAAWQ,KAAK,EAAE,CAAC;QACrD,MAAMoB,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;QAC7BlB,SAAS,CAACiB,IAAI,CAAClB,MAAM,CAAC;QACtB,IAAIkB,IAAI,CAAClB,MAAM,KAAK,WAAW,EAAE;UAC/BG,cAAc,CAAC,GAAGb,OAAO,aAAaQ,KAAK,EAAE,CAAC;UAC9C2B,aAAa,CAACF,QAAQ,CAAC;QACzB,CAAC,MAAM,IAAIL,IAAI,CAAClB,MAAM,KAAK,QAAQ,EAAE;UACnCK,QAAQ,CAAC,oBAAoB,CAAC;UAC9BoB,aAAa,CAACF,QAAQ,CAAC;QACzB;MACF,CAAC,CAAC,OAAOD,GAAG,EAAE;QACZjB,QAAQ,CAAC,wBAAwB,CAAC;QAClCoB,aAAa,CAACF,QAAQ,CAAC;MACzB;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACElC,OAAA;IAAKqC,KAAK,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE,WAAW;MAAEC,OAAO,EAAE,EAAE;MAAEC,YAAY,EAAE,CAAC;MAAEC,SAAS,EAAE,gBAAgB;MAAEC,UAAU,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAChI5C,OAAA;MAAA4C,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChChD,OAAA;MAAOiD,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,4BAA4B;MAACC,QAAQ,EAAElC;IAAiB;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrFhD,OAAA;MAAQqC,KAAK,EAAE;QAAEe,SAAS,EAAE;MAAG,CAAE;MAACC,OAAO,EAAEhC,YAAa;MAACiC,QAAQ,EAAE,CAAC/C,IAAK;MAAAqC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClGrC,MAAM,iBAAIX,OAAA;MAAKqC,KAAK,EAAE;QAAEe,SAAS,EAAE;MAAG,CAAE;MAAAR,QAAA,GAAC,UAAQ,EAACjC,MAAM;IAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC/DnC,WAAW,iBACVb,OAAA;MAAGuD,IAAI,EAAE1C,WAAY;MAACwB,KAAK,EAAE;QAAEmB,OAAO,EAAE,OAAO;QAAEJ,SAAS,EAAE;MAAG,CAAE;MAACK,QAAQ;MAAAb,QAAA,EAAC;IAE3E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACJ,EACAjC,KAAK,iBAAIf,OAAA;MAAKqC,KAAK,EAAE;QAAEqB,KAAK,EAAE,KAAK;QAAEN,SAAS,EAAE;MAAG,CAAE;MAAAR,QAAA,EAAE7B;IAAK;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpEhD,OAAA;MAAKqC,KAAK,EAAE;QAAEe,SAAS,EAAE,EAAE;QAAEO,QAAQ,EAAE,EAAE;QAAED,KAAK,EAAE;MAAO,CAAE;MAAAd,QAAA,EAAC;IAE5D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1C,EAAA,CA3EQD,GAAG;AAAAuD,EAAA,GAAHvD,GAAG;AA6EZ,eAAeA,GAAG;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}